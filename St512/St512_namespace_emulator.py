'''
https://stepik.org/lesson/24460/step/10?unit=6766

Программа эмулирует работу с пространствами имен.

Необходимо реализовать поддержку создания пространств имен и добавление в них переменных.
В данной задаче у каждого пространства имен есть уникальный текстовый идентификатор – его имя.

Вашей программе на вход подаются следующие запросы:
  - create <namespace> <parent> –  создать новое пространство имен с именем <namespace> внутри пространства <parent>
  - add <namespace> <var> – добавить в пространство <namespace> переменную <var>
  - get <namespace> <var> – получить имя пространства, из которого будет взята переменная <var> при запросе из пространства <namespace>,
    или None, если такого пространства не существует

Формат входных данных:
    В первой строке дано число n (1 ≤ n ≤ 100) – число запросов.
    В каждой из следующих n строк дано по одному запросу.
    Запросы выполняются в порядке, в котором они даны во входных данных.
    Имена пространства имен и имена переменных представляют из себя строки длины не более 10, состоящие из строчных латинских букв.

Формат выходных данных:
    Для каждого запроса get выведите в отдельной строке его результат.
'''
# ====== imports block ================================== #


# ====== function declaration =========================== #


# ====== main code ====================================== #
n = int(input())
#cmd, nsp, arg = input().split()
cmds = [input().split() for _ in range(n)]
print(cmds)

glbl = ['global_nms']
print('global_start = ', glbl)
for cmd in cmds:
    if cmd[0] == 'add':
        if cmd[1] in glbl:
            pass
        else:
            glbl.append(cmd[2])
    elif cmd[0] == 'create':
        if cmd[1] in glbl:
            pass
        else:
            glbl.append([f'{cmd[2]}_nms', f'{cmd[1]}_nms'])
    elif cmd[0] == 'get':
        pass
print('global_end = ', glbl)


# Делаем List'ы для global с его непосредственным содержимым
# и для каждого вложенного namespace'а
# По сути нужно сделать дерево с ветками-list'ами

# ====== end of code ==================================== #