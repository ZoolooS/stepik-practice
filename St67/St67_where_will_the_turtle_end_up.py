'''
Группа биологов в институте биоинформатики завела себе черепашку.

После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
север 10
запад 20
юг 30
восток 40
где первое слово — это направление, в котором должна двигаться черепашка,
а число после слова — это положительное расстояние в сантиметрах, которое должна пройти черепашка.

Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно написать программу,
которая определит, куда в итоге биологи приведут черепашку.
Для этого программисты просят вас написать программу, которая выведет точку, в которой окажется черепашка после всех команд.
Для простоты они решили считать, что движение начинается в точке (0, 0),
и движение на восток увеличивает первую координату, а на север — вторую.

Программе подаётся на вход число команд n, которые нужно выполнить черепашке,
после чего n строк с самими командами.
Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки.
Все координаты целочисленные.
'''
# ====== imports block ================================== #


# ====== function declaration =========================== #
def get_coords():
    #comm_dict = [{k: int(v)} for k, v in [input().split() for _ in range(int(input()))]]
    paths = {'север': 0, 'юг': 0, 'восток': 0, 'запад': 0}
    {paths.update({el[0]: int(paths[el[0]]) + int(el[1])}) for el in [tuple(input().split()) for _ in range(int(input()))]}
    print(paths['восток'] - paths['запад'], paths['север'] - paths['юг'])


def get_coords_alt():
    comm_list = [input().split() for _ in range(int(input()))]

    x, y = 0, 0
    for el in comm_list:
        if el[0] == 'восток':
            x += int(el[1])
        if el[0] == 'запад':
            x -= int(el[1])
        if el[0] == 'север':
            y += int(el[1])
        if el[0] == 'юг':
            y -= int(el[1])
    print(x, y)

# ====== main code ====================================== #
get_coords()
#get_coords_alt()


# ====== end of code ==================================== #