'''
Группа биологов в институте биоинформатики завела себе черепашку.

После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
север 10
запад 20
юг 30
восток 40
где первое слово — это направление, в котором должна двигаться черепашка,
а число после слова — это положительное расстояние в сантиметрах, которое должна пройти черепашка.

Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно написать программу,
которая определит, куда в итоге биологи приведут черепашку.
Для этого программисты просят вас написать программу, которая выведет точку, в которой окажется черепашка после всех команд.
Для простоты они решили считать, что движение начинается в точке (0, 0),
и движение на восток увеличивает первую координату, а на север — вторую.

Программе подаётся на вход число команд n, которые нужно выполнить черепашке,
после чего n строк с самими командами.
Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки.
Все координаты целочисленные.
'''
# ====== imports block ================================== #


# ====== function declaration =========================== #


# ====== main code ====================================== #
commands_len = int(input())

comm_dict = [{k: int(v)} for k, v in [input().split() for _ in range(commands_len)]]
print(comm_dict)

comm_set = []
[comm_set.extend(el.keys()) for el in comm_dict]
comm_set = set(comm_set)
print(comm_set)
dir_paths = {}
#[[ for i in comm_dict if com] for direction in comm_set]
for direction in comm_set:
    dir_len = 0
    for command in comm_dict:
        dir_len += command[direction]
    dir_paths[direction] = dir_len

print(dir_paths)
#print(type(dict(input().split())))



# ====== end of code ==================================== #